openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /subject/:
    get:
      operationId: listCategorys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - subject
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - subject
  /questions/{id}/:
    get:
      operationId: retrieveQuestions
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Question.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
          description: ''
      tags:
      - questions
    post:
      operationId: createQuestions
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Question.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Questions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Questions'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
          description: ''
      tags:
      - questions
  /r/{topic}/:
    get:
      operationId: retrieveCategoryDetail
      description: ''
      parameters:
      - name: topic
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - r
  /swagger/:
    get:
      operationId: listSwaggerSchemas
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/coreapi+json:
              schema:
                type: array
                items: {}
            application/openapi+json:
              schema:
                type: array
                items: {}
            text/html:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - swagger
  /users/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - login
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - name
    Questions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        question:
          type: string
          maxLength: 255
        exam_year:
          type: integer
        exam_name:
          type: string
          maxLength: 255
        category:
          type: integer
      required:
      - question
      - exam_year
      - exam_name
      - category
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - username
      - password
